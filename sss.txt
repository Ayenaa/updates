Description
Objective:

To work with Collections - Lists and Dictionaries




Concept Explanation: 

A list is a data structure in Python that is a mutable, or changeable, ordered sequence of elements. 
Dictionaries are mutable data structures in Python that store the value in key: value pairs 
Concept Implementation: 

Here, the dictionary is used to store the event preference of each participant and the names of participants for each event. 
Lists are used to store the names of participants for each event and the events preferred by each participant. 

Scenario:


As a data analyst working on an Event Management System, you are required to create a Python program to simulate participant registration and preference updates for an event. The program will receive input from the user for an event of participants, including their names, emails, registration dates, and event preferences. It will then process this information and display the participant preferences and participants for each event.


Guidelines:


Prompt the user to input the number of participants for the event. If the number of participants is zero or negative, then display the message "Invalid Input" and stop the program.
For each participant, request the following information:
Participant name
Participant email
Registration date (in YYYY-MM-DD format)
Event preferences separated by spaces (Workshop/Presentation/Hackathon/Quiz)
Update participant preferences in a dictionary. The dictionary should consist of the participant's name as the key and value should be the list of events preferred by the respective participant. 
Update event participants in a dictionary. The dictionary should consist of the event name as the key and the value should be the list of names of participants who have preferred the respective event.
Display the results for the event, including:
Participant preferences for each participant.
Participants for each event.


Note: 

Refer the sample input and output statements for more clarifications. 
In the Sample Input / Output provided, the highlighted text in bold corresponds to the input given by the user, and the rest of the text represents the output.



Sample Input / Output 1:

Enter the number of participants: 3

Enter participant name: Emma

Enter participant email: emma@gmail.com

Enter registration date (YYYY-MM-DD): 2023-12-15

Enter participant preferences separated by spaces (Workshop/Presentation/Hackathon/Quiz): Workshop Quiz



Enter participant name: Daniel

Enter participant email: daniel@gmail.com

Enter registration date (YYYY-MM-DD): 2023-12-15

Enter participant preferences separated by spaces (Workshop/Presentation/Hackathon/Quiz): Presentation Hackathon



Enter participant name: Sophia

Enter participant email: sophia@gmail.com

Enter registration date (YYYY-MM-DD): 2023-12-16

Enter participant preferences separated by spaces (Workshop/Presentation/Hackathon/Quiz): Workshop Hackathon



Registered Successfully!

Participant Preferences: {'Emma': ['Workshop', 'Quiz'], 'Daniel': ['Presentation ', 'Hackathon'], 'Sophia': ['Workshop', 'Hackathon']}

Event Participants: {'Workshop': ['Emma', 'Sophia'] 'Quiz': ['Emma'], 'Presentation': ['Daniel'], 'Hackathon': ['Sophia', 'Daniel']}



Sample Input / Output 2:

Enter the number of participants: 0

Invalid Input



Sample Input / Output 3:

Enter the number of participants: -1

Invalid Input